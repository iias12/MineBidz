@model MineBidz.Models.DisplayBaseViewModel

@{Domain.Concrete.Classification detailsModel = Newtonsoft.Json.JsonConvert.DeserializeObject<Domain.Concrete.Classification>(Model.DetailsInfoJson);}
<fieldset>
    <legend>@String.Format("{0}/{1}/{2}", Model.Category, Model.Subcategory, Model.FormTitle)</legend>
    <div class="createForm">
        <div>
            @Html.Label("", "Delivery: ", new { @style = "float:left" })
            @Html.Label("", Model.Contry, new { @style = "float:left; color:#000; margin-left:5px" })
            @Html.Label("", Model.Location, new { @style = "float:left; color:#000; margin-left:5px" })
        </div>
    </div>
    <div class="createForm">
        <div>
            @Html.Label("", "SG Specific Gravity: ", new { @style = "float:left" })
            @Html.Label("", detailsModel.SGSpecificGravity.ToString(), new { @style = "float:left; color:#000; margin-left:5px" })
        </div>
        <div>
            @Html.Label("", "Product Type (ie. Gold etc...): ", new { @style = "float:left" })
            @Html.Label("", detailsModel.ProductType, new { @style = "float:left; color:#000; margin-left:5px" })
        </div>
        <div>
            @Html.Label("", "Production Target: ", new { @style = "float:left" })
            @Html.Label("", detailsModel.ProductionTargetNumber.ToString(), new { @style = "float:left; color:#000; margin-left:5px" })
            @Html.Label("", detailsModel.ProductionTargetUnit, new { @style = "float:left; color:#000; margin-left:5px" })
        </div>
        <div>
            @Html.Label("", "Metallurgical Test Work: ", new { @style = "float:left" })
            @Html.Label("", detailsModel.MetallurgicalTestWork, new { @style = "float:left; color:#000; margin-left:5px" })
        </div>
    </div>
    <div class="createForm">
        <div>
            @Html.Label("", "Type of Classifier: ", new { @style = "float:left" })
            @Html.Label("", detailsModel.ClassifierType, new { @style = "float:left; color:#000; margin-left:5px" })
        </div>
        <div>
            @Html.Label("", "Specify if 'Other': ", new { @style = "float:left" })
            @Html.Label("", detailsModel.ClassifierTypeOther, new { @style = "float:left; color:#000; margin-left:5px" })
        </div>

        <div>
            @Html.Label("", "Flow Rate (GPM): ", new { @style = "float:left" })
            @Html.Label("", detailsModel.FlowRateGPM.ToString(), new { @style = "float:left; color:#000; margin-left:5px" })
        </div>
        <div>
            @Html.Label("", "% Solids in Overflow: ", new { @style = "float:left" })
            @Html.Label("", detailsModel.SolidsPercentOverflow.ToString(), new { @style = "float:left; color:#000; margin-left:5px" })
        </div>
        <div>
            @Html.Label("", "% Solids in Underflow: ", new { @style = "float:left" })
            @Html.Label("", detailsModel.SolidsPercentUnderflow.ToString(), new { @style = "float:left; color:#000; margin-left:5px" })
        </div>
        <div>
            @Html.Label("", "Estimated Circulating Load: ", new { @style = "float:left" })
            @Html.Label("", detailsModel.EstimatedCirculatingLoad, new { @style = "float:left; color:#000; margin-left:5px" })
        </div>
    </div>
    <div class="createForm">
        <div>
            @Html.Label("", "Pressure Drop Target(kpa): ", new { @style = "float:left" })
            @Html.Label("", detailsModel.PressureDropTargetKPA, new { @style = "float:left; color:#000; margin-left:5px" })
        </div>
        <div>
            @Html.Label("", "Cyclone Estimat. Diameter: ", new { @style = "float:left" })
            @Html.Label("", detailsModel.CycloneEstimatedDiameter, new { @style = "float:left; color:#000; margin-left:5px" })
            @Html.Label("", detailsModel.CycloneEstimatedDiameterUnit, new { @style = "float:left; color:#000; margin-left:5px" })
        </div>
        <div>
            @Html.Label("", "Feed 80% Passing Expected(micron): ", new { @style = "float:left" })
            @Html.Label("", detailsModel.Feed80PercentPassingExpectedMicron.ToString(), new { @style = "float:left; color:#000; margin-left:5px" })
        </div>
        <div>
            @Html.Label("", "Products 80% Passing Expected(micron): ", new { @style = "float:left" })
            @Html.Label("", detailsModel.Products80PercentPassingExpectedMicron.ToString(), new { @style = "float:left; color:#000; margin-left:5px" })
        </div>
    </div>
    @{Html.RenderPartial("PartialDisplayMotorIncluded", detailsModel.MotorIncluded);}
    @{Html.RenderPartial("PartialDisplayMotor", detailsModel.Motor);}
    @{Html.RenderPartial("PartialDisplayCommon");}
</fieldset>

@{Html.RenderPartial("PartialDisplayPlaceBid");}
